{
  "regime_transition_management": {
    "overview": {
      "challenge": "What happens when market regime switches while positions are open in either engine?",
      "complexity_factors": [
        "Different engines have different position management logic",
        "Open positions may no longer be appropriate for new regime",
        "Transaction costs of forced position closures",
        "Risk of being caught in wrong regime during transition",
        "Partial fills and multi-leg positions during transition"
      ],
      "solution_approach": "Multi-tier adaptive transition system with position evaluation and selective migration"
    },

    "transition_decision_matrix": {
      "trend_to_chop_transition": {
        "scenario": "Trend engine has directional positions, regime switches to choppy",
        "risk_factors": [
          "Directional exposure inappropriate for ranging market",
          "Stop losses may be too wide for choppy conditions",
          "Take profit levels may be too aggressive"
        ],
        "decision_criteria": {
          "immediate_exit": {
            "conditions": [
              "position_unrealized_pnl < -2%",
              "regime_confidence > 0.8",
              "position_age > 4_hours",
              "adx_dropping_rapidly"
            ],
            "action": "close_position_immediately"
          },
          "graceful_migration": {
            "conditions": [
              "position_unrealized_pnl > 0%",
              "position_age < 2_hours",
              "regime_confidence < 0.7"
            ],
            "action": "convert_to_grid_center_anchor"
          },
          "protective_hold": {
            "conditions": [
              "position_unrealized_pnl > -1%",
              "strong_support_resistance_nearby"
            ],
            "action": "tighten_stops_and_monitor"
          }
        }
      },

      "chop_to_trend_transition": {
        "scenario": "Grid engine has hedge positions, regime switches to trending",
        "risk_factors": [
          "Hedge positions may work against strong trend",
          "Grid levels may be inappropriate for breakout",
          "Symmetric exposure becomes directional liability"
        ],
        "decision_criteria": {
          "flatten_hedge": {
            "conditions": [
              "trend_strength_adx > 25",
              "breakout_confirmed",
              "grid_net_exposure_against_trend"
            ],
            "action": "close_counter_trend_legs_immediately"
          },
          "convert_to_trend": {
            "conditions": [
              "net_grid_exposure_aligned_with_trend",
              "unrealized_pnl_positive_overall"
            ],
            "action": "close_counter_trend_legs_keep_trend_aligned"
          },
          "gradual_unwind": {
            "conditions": [
              "trend_strength_moderate_adx_20_25",
              "grid_positions_profitable"
            ],
            "action": "stop_new_counter_trend_entries_scale_out"
          }
        }
      }
    },

    "transition_execution_system": {
      "transition_manager": {
        "file": "internal/transition/manager.go",
        "responsibilities": [
          "Monitor regime changes and trigger transition evaluation",
          "Assess current positions against new regime requirements",
          "Execute transition decisions with proper risk controls",
          "Track transition costs and effectiveness"
        ],
        "key_methods": {
          "EvaluateTransition": "Analyzes current positions vs new regime requirements",
          "ExecuteTransition": "Performs the actual position adjustments",
          "MonitorTransition": "Tracks transition progress and handles edge cases"
        }
      },

      "position_evaluator": {
        "file": "internal/transition/position_evaluator.go",
        "evaluation_criteria": {
          "position_alignment": {
            "trend_regime": [
              "directional_exposure_appropriate",
              "stop_loss_levels_suitable",
              "take_profit_targets_reasonable"
            ],
            "chop_regime": [
              "exposure_not_too_directional",
              "position_size_appropriate_for_ranges",
              "time_decay_manageable"
            ]
          },
          "risk_assessment": {
            "unrealized_pnl": "current_profit_loss_status",
            "position_age": "time_since_entry",
            "market_distance": "proximity_to_support_resistance",
            "volatility_context": "current_atr_vs_historical"
          },
          "regime_confidence": {
            "transition_certainty": "confidence_score_of_new_regime",
            "transition_speed": "how_quickly_regime_changed",
            "historical_stability": "how_long_previous_regime_lasted"
          }
        }
      },

      "transition_actions": {
        "immediate_actions": {
          "emergency_flatten": {
            "trigger": "regime_confidence > 0.9 AND position_against_new_regime",
            "execution": "market_orders_with_slippage_limits",
            "risk_controls": "max_2%_portfolio_impact_per_transition"
          },
          "protective_stops": {
            "trigger": "regime_confidence > 0.7 AND position_at_risk",
            "execution": "tighten_stop_losses_to_1x_atr",
            "monitoring": "increased_position_monitoring_frequency"
          }
        },
        "gradual_actions": {
          "scale_out": {
            "execution": "reduce_position_size_by_50%_over_next_4_bars",
            "conditions": "maintain_core_position_if_aligned",
            "monitoring": "track_pnl_impact_vs_immediate_exit"
          },
          "conversion": {
            "trend_to_grid": {
              "method": "use_current_position_as_grid_anchor",
              "steps": [
                "calculate_new_grid_levels_around_current_price",
                "place_symmetric_orders_if_position_allows",
                "adjust_position_size_to_grid_requirements"
              ]
            },
            "grid_to_trend": {
              "method": "consolidate_aligned_legs_close_counter_trend",
              "steps": [
                "identify_trend_aligned_vs_counter_trend_legs",
                "close_counter_trend_positions_first",
                "consolidate_aligned_positions_into_single_trend_position"
              ]
            }
          }
        }
      }
    },

    "state_management_during_transitions": {
      "position_tracking": {
        "transition_state": {
          "status": "enum: [stable, transitioning, post_transition_monitoring]",
          "transition_type": "enum: [trend_to_chop, chop_to_trend, regime_uncertain]",
          "transition_start_time": "timestamp_of_regime_change_detection",
          "original_positions": "snapshot_of_positions_before_transition",
          "target_positions": "desired_position_state_after_transition",
          "transition_progress": "percentage_completion_of_transition_plan"
        },
        "risk_monitoring": {
          "transition_cost": "accumulate_transaction_costs_during_transition",
          "slippage_tracking": "monitor_execution_quality_during_transitions",
          "pnl_impact": "track_pnl_impact_of_transition_vs_no_action",
          "time_to_complete": "measure_how_long_transitions_take"
        }
      },

      "order_management": {
        "existing_orders": {
          "stop_losses": {
            "evaluation": "assess_if_existing_stops_appropriate_for_new_regime",
            "actions": ["keep_as_is", "tighten", "widen", "cancel_and_replace"]
          },
          "take_profits": {
            "trend_engine_tps": "may_need_adjustment_for_ranging_market",
            "grid_engine_tps": "may_need_cancellation_if_trending_strongly"
          },
          "pending_entries": {
            "grid_levels": "cancel_counter_trend_pending_orders",
            "trend_pullbacks": "cancel_if_regime_no_longer_trending"
          }
        },
        "new_orders": {
          "transition_period": "pause_new_entries_until_transition_complete",
          "regime_uncertainty": "reduce_position_sizes_during_uncertain_periods",
          "post_transition": "resume_normal_operations_with_new_engine_parameters"
        }
      }
    },

    "implementation_architecture": {
      "core_components": {
        "transition_manager": {
          "responsibilities": "Orchestrates entire transition process",
          "interfaces": {
            "regime_detector": "receives_regime_change_notifications",
            "position_manager": "queries_current_position_state",
            "risk_manager": "enforces_transition_risk_limits",
            "execution_engine": "executes_position_adjustments"
          }
        },
        "transition_policies": {
          "policy_engine": "Rule-based system for transition decisions",
          "configuration": "Customizable parameters for different instruments/conditions",
          "backtesting": "Ability to test transition policies on historical data"
        }
      },

      "integration_with_existing_bot": {
        "livebot_modifications": {
          "state_extensions": [
            "transition_state: TransitionState",
            "transition_manager: *TransitionManager",
            "regime_history: []RegimeChange"
          ],
          "method_additions": [
            "HandleRegimeChange(old, new Regime)",
            "EvaluatePositionForTransition()",
            "ExecuteTransitionPlan(plan TransitionPlan)"
          ]
        },
        "position_sync_enhancement": {
          "existing_sync": "syncExistingPosition() and syncExistingOrders()",
          "enhancement": "Add transition state recovery after bot restart",
          "new_method": "syncTransitionState() - recovers incomplete transitions"
        }
      }
    },

    "transition_policies_configuration": {
      "conservative_policy": {
        "description": "Minimize transition costs, accept some regime mismatch",
        "parameters": {
          "regime_confidence_threshold": 0.8,
          "max_transition_cost": "0.5%_of_portfolio",
          "position_hold_time": "let_positions_run_to_natural_exits",
          "emergency_exit_threshold": "only_if_unrealized_loss > 3%"
        }
      },
      "aggressive_policy": {
        "description": "Optimize for regime alignment, accept higher transition costs",
        "parameters": {
          "regime_confidence_threshold": 0.6,
          "max_transition_cost": "1.5%_of_portfolio",
          "position_adjustment": "immediate_alignment_with_new_regime",
          "emergency_exit_threshold": "any_counter_regime_position"
        }
      },
      "adaptive_policy": {
        "description": "Dynamic policy based on market conditions and performance",
        "parameters": {
          "regime_confidence_scaling": "higher_confidence_more_aggressive_transitions",
          "performance_based": "recent_transition_success_rate_affects_aggressiveness",
          "volatility_adjusted": "higher_volatility_more_conservative_transitions",
          "time_based": "faster_transitions_during_active_trading_hours"
        }
      }
    },

    "risk_controls_and_safeguards": {
      "transition_limits": {
        "daily_transition_budget": "max_1%_portfolio_value_per_day_on_transitions",
        "max_transitions_per_session": "prevent_excessive_regime_flip_flopping",
        "minimum_regime_duration": "require_at_least_30_minutes_before_next_switch",
        "transition_cooldown": "5_minute_cooldown_after_each_transition"
      },
      "emergency_controls": {
        "manual_override": "operator_can_pause_automatic_transitions",
        "circuit_breaker": "halt_transitions_if_cumulative_cost > 2%_daily",
        "regime_uncertainty_mode": "reduce_all_position_sizes_during_unclear_regimes",
        "system_halt": "emergency_flatten_if_transition_system_malfunctions"
      },
      "monitoring_and_alerts": {
        "transition_notifications": "immediate_alerts_for_all_regime_switches",
        "cost_tracking": "real_time_monitoring_of_transition_costs",
        "performance_metrics": "track_success_rate_of_different_transition_types",
        "regime_accuracy": "monitor_how_often_regime_switches_are_correct"
      }
    },

    "testing_and_validation": {
      "backtesting_scenarios": {
        "historical_regime_switches": "test_on_known_regime_change_periods",
        "synthetic_scenarios": "create_artificial_regime_switches_for_stress_testing",
        "edge_cases": "test_partial_fills_during_transitions_multiple_positions_etc"
      },
      "performance_metrics": {
        "transition_cost_analysis": "measure_actual_cost_vs_no_transition_scenarios",
        "regime_alignment_success": "how_often_transitions_improved_performance",
        "execution_quality": "slippage_and_timing_analysis_during_transitions",
        "risk_adjusted_returns": "overall_system_performance_with_transition_management"
      },
      "paper_trading_validation": {
        "transition_simulation": "run_paper_trading_with_real_regime_switches",
        "cost_measurement": "track_simulated_transition_costs",
        "decision_accuracy": "evaluate_transition_decisions_with_hindsight"
      }
    },

    "example_transition_scenarios": {
      "scenario_1_trend_long_to_chop": {
        "initial_state": {
          "regime": "TREND",
          "engine": "TrendEngine",
          "position": "Long 1000 SOLUSDT at $23.50, unrealized +$150",
          "orders": "Stop loss at $22.80, TP at $25.00"
        },
        "regime_change": {
          "new_regime": "CHOP",
          "confidence": 0.75,
          "trigger": "ADX dropped from 28 to 18, price in BB middle"
        },
        "evaluation": {
          "position_alignment": "Poor - directional position in ranging regime",
          "unrealized_pnl": "Positive +$150",
          "risk_factors": "Stop loss too wide for chop, TP too aggressive"
        },
        "transition_decision": "CONVERT_TO_GRID_ANCHOR",
        "execution_plan": {
          "step_1": "Cancel existing TP order at $25.00",
          "step_2": "Tighten stop loss to $23.20 (1x ATR)",
          "step_3": "Use $23.50 as new grid center anchor",
          "step_4": "Place symmetric grid orders around current position",
          "step_5": "Monitor for 2 hours, full grid if regime stable"
        }
      },
      "scenario_2_grid_hedge_to_trend": {
        "initial_state": {
          "regime": "CHOP",
          "engine": "GridEngine",
          "positions": [
            "Long 500 SOLUSDT at $23.20",
            "Short 600 SOLUSDT at $23.80",
            "Long 300 SOLUSDT at $22.90"
          ],
          "net_exposure": "Long 200 SOLUSDT equivalent"
        },
        "regime_change": {
          "new_regime": "TREND_UP",
          "confidence": 0.85,
          "trigger": "ADX rising to 26, breakout above Donchian, EMAs aligned"
        },
        "evaluation": {
          "position_alignment": "Mixed - net long aligns with uptrend but short hedge works against it",
          "unrealized_pnl": "Grid legs showing mixed results",
          "risk_factors": "Short position will lose if trend continues"
        },
        "transition_decision": "CLOSE_COUNTER_TREND_FLATTEN_SHORTS",
        "execution_plan": {
          "step_1": "Immediately close short 600 position at market",
          "step_2": "Consolidate long positions into single trend position",
          "step_3": "Set trend-appropriate stop at recent swing low",
          "step_4": "Set scaling TPs at 1R and 2R levels",
          "step_5": "Resume trend engine logic for future signals"
        }
      }
    }
  }
}
